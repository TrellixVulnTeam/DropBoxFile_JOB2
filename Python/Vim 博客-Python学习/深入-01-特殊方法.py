'''
# Python 一切皆对象，但同时，Python还是一个多范式语言，你不仅可以使用面向对象的方式编程，
# 还可以用面向过程的方式来编程。
# 当对象中定义了特殊方法的时候，Python也会对它们有“特殊优待”，
# 比如定义了 __init__() 方法的类，会在创建对象的时候自动执行

# Python 的运算符是通过调用对象的特殊方法实现的-----------------------------------
# print (help(str))

# 上面这个就是看 str 对象定义了哪些方法属性等。
# 里面有 __add__(),所以可以进行 + 操作。起到简化书写的作用

print ((1.8).__mul__(2.0))

print (True.__or__(False))


# 许多内置函数也都是调用对象的特殊方法----------------------------------------------

len([1,2,3])
[1,2,3].__len__()

print ((-1).__abs__())
print (abs(-1))

print (int(2.3))

# 表元素的引用也是特殊方法----------------------------------------------------------

L = [1,2,3,4,5,6,7]
print (L[3])
print (L.__getitem__(3))
L.__setitem__(3,0)
print (L)

d = {'a':1,'b':2}
d.__delitem__('a')
print (d)
'''

# 函数也是一种对象，任何一个有 __call__() 特殊方法的对象都被当作是函数

class SampleMore(object):
    def __call__(self,a):
        return a + 5

add = SampleMore()

print (add(2))
print (list(map(add,[2,4,5])))
